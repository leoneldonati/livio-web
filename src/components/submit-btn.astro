---
import { IconClockHour12Filled } from "@tabler/icons-react";

interface Props {
  styles?: string;
  hoverTitle?: string;
  loadingText: string;
}
const { styles, hoverTitle, loadingText } = Astro.props;
---

<button
  type="submit"
  class="submit-btn"
  style={styles}
  title={hoverTitle}
  data-loading-text={loadingText}
  transition:name="back-btn"
>
  <span id="slot">
    <slot />
  </span>

  <IconClockHour12Filled id="icon" />
</button>

<script>
  const $submitBtn = document.querySelector(".submit-btn") as HTMLButtonElement;
  const $icon = document.querySelector("#icon") as HTMLElement;
  const $slot = document.querySelector("#slot") as HTMLSpanElement;
  const loadingText = $submitBtn.getAttribute("data-loading-text")?.toString();
  if ($submitBtn) {
    $icon.style.opacity = "0";
    const form = $submitBtn.form;
    form?.addEventListener("submit", () => {
      $icon.style.opacity = "1";
      $icon.style.animationPlayState = "running";

      $submitBtn.style.pointerEvents = "none";
      $submitBtn.style.transform = "scale(.95)";
      $slot.innerText = loadingText ? loadingText : "";
      $slot.style.opacity = ".85";
    });
  }
</script>
<style>
  .submit-btn {
    width: fit-content;
    position: relative;
    display: flex;
    padding: 12px 16px;
    margin: 0 auto;
    background: var(--color_p);
    border: 2px solid transparent;
    border-radius: 12px;
    transition:
      box-shadow 0.1s ease-in-out,
      border 0.2s ease-out;

    &:hover {
      box-shadow: -2px 3px 3px var(--color_shadow);
      border-color: #fff;
    }

    & > svg {
      position: absolute;
      width: 20px;
      height: auto;
      top: -20%;
      right: 0;
      filter: drop-shadow(0 0 3px var(--color_shadow));
      animation: rotate 2s ease-in 0.1s infinite paused;
      background-color: var(--color_p);
      border-radius: 100%;
      transition: opacity 0.2s ease-in;
    }
  }
  #slot {
    width: 100%;
  }
  @keyframes rotate {
    0% {
      transform: rotate(0deg);
    }
    25% {
      transform: rotate(90deg);
    }
    50% {
      transform: rotate(180deg);
    }
    75% {
      transform: rotate(240deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
</style>
